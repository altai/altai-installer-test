#!/bin/bash

export MASTER_SERVICES="memcached focus odb 
    mysqld ntpd rabbitmq-server keystone 
    glance-api glance-registry
    nova-api nova-network nova-scheduler nova-novncproxy
    nova-billing-heart nova-billing-os-amqp
    pdns nova-dns"
export MASTER_TCP_PORTS="80 5000"
export MASTER_UDP_PORTS="53 123"

export COMPUTE_SERVICES="ntpd libvirtd nova-compute"
export COMPUTE_TCP_PORTS="22"
export COMPUTE_UDP_PORTS=""


draw_line() {
    perl -e 'printf "%s\n%s\n\n", "_" x 80, "=" x 80' 
}

check_services() {
        SERVICES=$1
        echo "Checking services... "
        PROCESS=`perl -lpe 's/\000/ /' /proc/*/cmdline`
        for service in $SERVICES; do
            if [[ "$PROCESS" =~ "$service" ]]; then
                echo "Service: $service - ok"
            else
                echo "Service: $service - NOT running";
                retcode=1
            fi
        done
        return $retcode
}

check_ports() {
        echo "Checking open ports..."
        TCP_PORTS=$1
        UDP_PORTS=$2
        NETSTAT=`netstat -anp`
        for port in $TCP_PORTS; do
            if [[ "$NETSTAT" =~ tcp.*$port.*LISTEN ]]; then
                echo "TCP Port: $port - ok"
            else 
                echo "TCP Port: $port - NOT listening"
                retcode=1
            fi
        done

        for port in $UDP_PORTS; do
            if [[ "$NETSTAT" =~ udp.*:$port ]]; then
                echo "UDP Port: $port - ok"
            else 
                echo "UDP Port:$port - NOT listening";
                retcode=1
            fi
        done
        return $retcode
}

#upload_image() {
#        wget http://osc-build.vm.griddynamics.net/images/mini_image.img
#        OS_USERNAME="admin" \
#        OS_PASSWORD="topsecret" \
#        OS_TENANT_NAME="systenant" \
#        OS_AUTH_URL="http://$NODE_IP:5000/v2.0/" \
#        OS_COMPUTE_API_VERSION="1.1" \
#        OS_AUTH_STRATEGY="keystone" \
#        NOVA_VERSION=1.1 \
#        USE_KEYSTONE=true \
#        glance add name="test-suite-image" disk_format=qcow2 container_format=ovf <mini_image.img'
#}

